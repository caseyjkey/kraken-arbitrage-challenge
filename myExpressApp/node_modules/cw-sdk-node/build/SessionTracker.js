"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const events_1 = require("events");
const modules = ["placeOrder", "orders", "trades", /*"balances",*/ "positions"];
/**
 * This class is used to keep trading sessions organized, and emit a ready status when the client
 * can trade.
 */
class SessionTracker extends events_1.EventEmitter {
    constructor(tradeSubs) {
        super();
        this.ready = false;
        this.sessions = {};
        this.markets = [];
        tradeSubs.forEach(ts => {
            this.markets.push(ts.marketID);
        });
        this.reset();
    }
    isReady() {
        return this.ready;
    }
    setModuleReady(mID, m) {
        if (this.sessions[mID][m] === true) {
            return;
        }
        this.sessions[mID][m] = true;
        if (this.modulesReady()) {
            this.ready = true;
            this.emit("ready");
        }
    }
    isModuleReady(mID, m) {
        return this.sessions[mID][m];
    }
    reset() {
        this.markets.forEach(mID => {
            this.sessions[mID] = {
                initialized: false,
                orders: false,
                trades: false,
                positions: false
            };
        });
    }
    modulesReady() {
        for (const mID of this.markets) {
            for (const m of modules) {
                if (this.sessions[mID][m] !== true) {
                    return false;
                }
            }
        }
        return true;
    }
}
exports.default = SessionTracker;
